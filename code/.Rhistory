sum(table(unique(filter(dat, Latitude > 0)$Serial_Num)))
sum(table(unique(filter(dat, Latitude < 0)$Serial_Num)))
north=distinct(select(filter(dat,dat$Latitude>0), Serial_Num,Name))
nrow(north)
south=distinct(select(filter(dat,dat$Latitude<0), Serial_Num,Name))
nrow(south)
nrow(distinct(select(filter(dat,dat$Latitude==0), Serial_Num)))
#part c
sum(table(unique(filter(dat, Latitude == 0)$Serial_Num)))
#None pass through the equator
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
sum(duplicated(rbind(north,south)))
select(merge(north,south),Name)
sum(duplicated(rbind(north,south)))
select(merge(north,south),Name)
head(read.csv('https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2019/master/data/ibtracs_2010.csv', sep=","))
sum(duplicated(rbind(north,south)))
select(merge(north,south),Name)
f=mutate(select(filter(dat,dat$Name=="JULIA"),Wind.WMO.,ISO_time),hours=as.interval(ymd_hms(select(filter(dat,dat$Name=="JULIA"),Wind.WMO.,ISO_time)$ISO_time),start=ymd_hms(tail(select(filter(dat,dat$Name=="JULIA"),Wind.WMO.,ISO_time)$ISO_time,1)))/3600)
ggplot(f,aes(hours,Wind.WMO.))+
geom_line()+
scale_x_continuous(labels=scales::comma)
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
dat <- read.table("~/Desktop/stat133/warmup/warmup04/ibtracs_2010.csv", sep = ",", header = TRUE, na.strings = c("-999."), colClasses = c("character", "integer", "character", "factor", "character", "character", "character", "character", "real", "real", "real", "real"))
str(dat)
library("lubridate")
date_time <- ymd_hms(dat$ISO_time)
dat <- cbind(dat, date_time)
month_num <- month(date_time)
dat <- cbind(dat, month_num)
month_str <- month(date_time, label = TRUE)
dat<- cbind(dat, month_str)
str(dat)
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
nrow(distinct(select(filter(dat, dat$Wind.WMO.>=64), Serial_Num)))
#part f
sum(table(unique(filter(dat, Wind.WMO. >= 64)$Wind.WMO.)))
#part e
sum(table(unique(filter(dat, Wind.WMO. >= 35)$Wind.WMO.)))
select(dat,Name,Pres.WMO.)[which.max(dat$Pres.WMO.),]
select(dat,Name,Wind.WMO.)[which.max(dat$Wind.WMO.),]
#part d
#intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part d
#intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
sum(duplicated(rbind(north,south)))
select(merge(north,south),Name)
north=distinct(select(filter(dat,dat$Latitude>0), Serial_Num,Name))
nrow(north)
south=distinct(select(filter(dat,dat$Latitude<0), Serial_Num,Name))
nrow(south)
sum(duplicated(rbind(north,south)))
select(merge(north,south),Name)
sum(duplicated(rbind(north,south)))
select(merge(north,south),Name)
north=distinct(select(filter(dat,dat$Latitude>0), Serial_Num,Name))
nrow(north)
south=distinct(select(filter(dat,dat$Latitude<0), Serial_Num,Name))
nrow(south)
sum(duplicated(rbind(north,south)))
select(merge(north,south),Name)
sum(duplicated(rbind(north,south)))
select(merge(north,south),Name)
dat <- read.table("~/Desktop/stat133/warmup/warmup04/ibtracs_2010.csv", sep = ",", header = TRUE, na.strings = c("-999."), colClasses = c("character", "integer", "character", "factor", "character", "character", "character", "character", "real", "real", "real", "real"))
str(dat)
library("lubridate")
date_time <- ymd_hms(dat$ISO_time)
dat <- cbind(dat, date_time)
month_num <- month(date_time)
dat <- cbind(dat, month_num)
month_str <- month(date_time, label = TRUE)
dat<- cbind(dat, month_str)
str(dat)
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Serial_Num)))
sum(table(unique(filter(dat, Latitude < 0)$Serial_Num)))
#part c
sum(table(unique(filter(dat, Latitude == 0)$Serial_Num)))
#None pass through the equator
#part d
#intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part e
sum(table(unique(filter(dat, Wind.WMO. >= 35)$Wind.WMO.)))
#part f
sum(table(unique(filter(dat, Wind.WMO. >= 64)$Wind.WMO.)))
#part g
select(dat[which.max(dat$Wind.WMO.),], Name, Wind.WMO.)
#part i
which.max(table(group_by(dat, month_str)$month_str))
max(table(group_by(dat, month_str)$month_str))
#part c
ggplot(filter(dat, Name == "JULIA"), aes(x = time, y = Wind.WMO.) )
#part c
ggplot(filter(dat, Name == "JULIA"), aes(x = date_time, y = Wind.WMO.)) + geom_point()
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Serial_Num)))
sum(table(unique(filter(dat, Latitude < 0)$Serial_Num)))
table(unique(filter(dat, Latitutde <0)$Serial_Num))
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Serial_Num)))
sum(table(unique(filter(dat, Latitude < 0)$Serial_Num)))
table(unique(filter(dat, Latitude <0)$Serial_Num))
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Serial_Num)))
sum(table(unique(filter(dat, Latitude < 0)$Name)))
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Name)))
sum(table(unique(filter(dat, Latitude < 0)$Name)))
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Name)))
istinct(select(filter(dat,dat$Latitude<0), Serial_Num,Name))
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Name)))
distinct(select(filter(dat,dat$Latitude<0), Serial_Num,Name))
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Name)))
nrow(distinct(select(filter(dat,dat$Latitude<0), Serial_Num,Name)))
dat <- read.table("~/Desktop/stat133/warmup/warmup04/ibtracs_2010.csv", sep = ",", header = TRUE, na.strings = c("-999."), colClasses = c("character", "integer", "character", "factor", "character", "character", "character", "character", "real", "real", "real", "real"))
str(dat)
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Name)))
sum(table(unique(filter(dat, Latitude < 0)$Name)))
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Name)))
sum(table(unique(filter(dat, Latitude < 0)$Name)))
#part c
sum(table(unique(filter(dat, Latitude == 0)$Serial_Num)))
#None pass through the equator
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(maps)
nrow(distinct(select(dat,Serial_Num)))
north=distinct(select(filter(dat,dat$Latitude>0), Serial_Num,Name))
nrow(north)
south=distinct(select(filter(dat,dat$Latitude<0), Serial_Num,Name))
nrow(south)
nrow(distinct(select(filter(dat,dat$Latitude==0), Serial_Num)))
sum(duplicated(rbind(north,south)))
select(merge(north,south),Name)
head(read.csv('https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2019/master/data/ibtracs_2010.csv', sep=","))
column_types=c("character", "integer", "character", "factor",rep("character",4), rep("real",4))
dat=read.table("ibtracs_2010.csv", sep=",", header=TRUE, colClasses = column_types)
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Name)))
sum(table(unique(filter(dat, Latitude < 0)$Name)))
#part c
sum(table(unique(filter(dat, Latitude == 0)$Serial_Num)))
#None pass through the equator
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part a
sum(table(unique(dat$Serial_Num)))
#part b
library(dplyr)
sum(table(unique(filter(dat, Latitude > 0)$Serial_Num)))
sum(table(unique(filter(dat, Latitude < 0)$Serial_Num)))
#part a
sum(table(unique(dat$Serial_Num)))
#part b
library(dplyr)
sum(table(distinct(filter(dat, Latitude > 0), Name)))
sum(table(distinct(filter(dat, Latitude < 0), Name)))
#part b
library(dplyr)
sum(table(distinct(filter(dat, Latitude > 0), Name)))
sum(table(distinct(filter(dat, Latitude < 0), Name)))
table(distinct(filter(dat, Latitutde > 0), Name))
#part b
library(dplyr)
sum(table(distinct(filter(dat, Latitude > 0), Name)))
sum(table(distinct(filter(dat, Latitude < 0), Name)))
table(distinct(filter(dat, Latitude > 0), Name))
#part b
library(dplyr)
sum(table(distinct(filter(dat, Latitude > 0), Serial_Num, Name)))
sum(table(distinct(filter(dat, Latitude < 0), Serial_Num, Name)))
table(distinct(filter(dat, Latitude > 0), Name))
#part b
library(dplyr)
sum(table(distinct(filter(dat, dat$Latitude > 0), Serial_Num, Name)))
sum(table(distinct(filter(dat, Latitude < 0), Serial_Num, Name)))
table(distinct(filter(dat, Latitude > 0), Name))
#part b
library(dplyr)
sum(table(distinct(filter(dat, dat$Latitude > 0), Serial_Num, Name)))
sum(table(distinct(filter(dat, dat$Latitude < 0), Serial_Num, Name)))
table(distinct(filter(dat, Latitude > 0), Name))
north=distinct(select(filter(dat,dat$Latitude>0), Serial_Num,Name))
nrow(north)
south=distinct(select(filter(dat,dat$Latitude<0), Serial_Num,Name))
nrow(south)
nrow(distinct(select(filter(dat,dat$Latitude==0), Serial_Num)))
#part b
library(dplyr)
sum(table(distinct(filter(dat, dat$Latitude > 0), Serial_Num, Name)))
sum(table(distinct(filter(dat, dat$Latitude < 0), Serial_Num, Name)))
table(distinct(filter(dat, Latitude > 0), Name))
#part c
sum(table(unique(filter(dat, Latitude == 0)$Serial_Num)))
#None pass through the equator
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part d
intersect(filter(dat, Latitude < 0)$Name, filter(dat, Latitude > 0)$Name)
#part c
ggplot(filter(dat, Name == "JULIA"), aes(x = as.interval(ymd_hms(select(filter(dat, Name=="JULIA"), y = Wind.WMO.)) + geom_point()
#part c
ggplot(filter(dat, Name == "JULIA"), aes(x = as.interval(ymd_hms(select(filter(dat, Name=="JULIA")))), y = Wind.WMO.)) + geom_point()
#part c
ggplot(filter(dat, Name == "JULIA"), aes(x = date_time, y = Wind.WMO.)) + geom_point()
#part c
ggplot(filter(dat, Name == "JULIA"), aes(x = date_time, y = Wind.WMO.)) + geom_point()
library("lubridate")
date_time <- ymd_hms(dat$ISO_time)
dat <- cbind(dat, date_time)
month_num <- month(date_time)
dat <- cbind(dat, month_num)
month_str <- month(date_time, label = TRUE)
dat<- cbind(dat, month_str)
str(dat)
#part c
ggplot(filter(dat, Name == "JULIA"), aes(x = date_time, y = Wind.WMO.)) + geom_point()
library("maps")
mapping=select(filter(dat, dat$Latitude!=-999),Name,Latitude,Longitude)
ggplot() + geom_polygon(data = map('world',interior = FALSE, fill = TRUE), aes(x=long, y = lat, group = group),fill="chartreuse4") +
coord_fixed(1.3)+
geom_point(data=mapping,aes(Longitude,Latitude),size=0.1,color="orange")+
theme_void()+
theme(plot.background = element_rect(fill = "#BFD5E3"))+
geom_hline(yintercept=0, linetype="dotted")+
labs(title="Recodings from IBTrACS Made Around the World",subtitle="This chart helps visualize where each storm recording was made and the areas that experienced them.")
library("maps")
map(database = "world") + points(dat$Longitude, dat$Latitude, col = "red")
library("maps")
map(database = "world")
#points(dat$Longitude, dat$Latitude, col = "red")
library("maps")
map(database = "world")
points(dat$Longitude, dat$Latitude, col = "red")
library("maps")
map(database = "world")
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", regions = ".")
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", interior = TRUE)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 1)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 15)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, resolution = 3)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, resolution = 0)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, resolution = 200)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = 2)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = 17)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = 16)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = 15)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, myborder = 0.5)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, )
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = 17)
points(dat$Longitude, dat$Latitude, col = "red", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
geom_hline(y-intercept = 0)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
geom_hline(yintercept = 0, linetype = "dotted")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, linetype = "dotted")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
main = "Map of Storms"
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
labs(title = "Storms in the World")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "STORMS")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude", sub = "A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude", sub = "A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude", subtitle = "A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude", sub = "A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude", sub = "A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude", sub ="hello")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "I want main title NOT bold and left aligned\n\n",
sub = "Sub title should be under the main title left aligned")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude")
subtitle = "hello"
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude", caption = "hello")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "gray")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude")
title(sub = "hello")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "Storms by Longitude and Latitude")
title(sub = "hello")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
labs(title = "Storms by Longitude and Latitude")
title(sub = "hello")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title("Storms by Longitude and Latitude")
title(sub = "hello")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title("Storms by Longitude and Latitude")
subtitle("hello")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title("Storms by Longitude and Latitude")
description("hello")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2) + title(sub = "HELLO")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(sub = "HELLO")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
select(dat,Name,Pres.WMO.)[which.max(dat$Pres.WMO.),]
select(dat,Name,Pres.WMO.)[which.min(dat$Pres.WMO.),]
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
label(sub = "HELLO")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
labs(sub = "HELLO")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "storms", xlab = "hlelo")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
library("maps")
map(database = "world", fill = TRUE, col = 13, bg = "white")
points(dat$Longitude, dat$Latitude, col = "yellow", cex = 0.5)
abline(h = 0, lty = 2)
title(main = "storms", sub = "A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
#"A look at storms of various strengths and how they traveled across the world. Data shows how which areas most experienced storms.")
setwd("~/gitdemo/code")
warriors <- filter(nba2018, team = "GSW")
warriors <- filter(nba2018, team == "GSW")
nba2018 <- read.csv("~/gitdemo/code/nba2018-players.csv")
nba2018 <- read.csv("~/gitdemo/data/nba2018-players.csv")
warriors <- filter(nba2018, team == "GSW")
source('~/gitdemo/code/demo-script.R')
source('~/gitdemo/code/demo-script.R')
nba2018 <- read.csv("~/gitdemo/data/nba2018-players.csv")
warriors <- filter(nba2018, Team == "GSW")
head(nba2018)
# Title: Demo script in R
# Description: We are using a script as a demo in Stat 133
# Input: We are taking inputs of data tables
# Output: We are sending out a summary
library(dplyr)
library(ggplot2)
nba2018 <- read.csv("~/gitdemo/data/nba2018-players.csv")
head(nba2018)
warriors <- filter(nba2018, team == "GSW")
